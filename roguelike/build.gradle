plugins {
    id 'java'
    id "org.jsonschema2pojo" version "1.2.1"
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.projectlombok:lombok:1.18.30'
    implementation 'commons-cli:commons-cli:1.6.0'
    implementation 'com.googlecode.lanterna:lanterna:3.1.2'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    implementation 'javax.validation:validation-api:1.1.0.CR2'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.0'
    //implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'

    implementation 'org.slf4j:slf4j-api:2.0.13'
    implementation 'ch.qos.logback:logback-classic:1.5.6'
}

jsonSchema2Pojo {

    // Location of the JSON Schema file(s). This may refer to a single file or a directory of files.
    source = files("${sourceSets.main.output.resourcesDir}/level.json")

    // Target directory for generated Java source files. The plugin will add this directory to the
    // java source set so the compiler will find and compile the newly generated source files.
    targetDirectory = file("${project.buildDir}/generated-sources/js2p")

    // Package name used for generated Java classes (for types where a fully qualified name has not
    // been supplied in the schema using the 'javaType' property).
    targetPackage = 'org.example.level.pojo'

    // Whether to include a javax.annotation.Generated (Java 8 and lower) or
    // javax.annotation.processing.Generated (Java 9+) in on generated types (default true).
    // See also: targetVersion.
    includeGeneratedAnnotation = true

}

compileJava.dependsOn generateJsonSchema2Pojo

test {
    useJUnitPlatform()
}
